{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://devtools-skypro/webpack/bootstrap","webpack://devtools-skypro/webpack/runtime/define property getters","webpack://devtools-skypro/webpack/runtime/hasOwnProperty shorthand","webpack://devtools-skypro/./js/components/result-component.ts","webpack://devtools-skypro/./js/components/game-component.ts","webpack://devtools-skypro/./js/components/start-page-component.ts","webpack://devtools-skypro/./js/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { game, resetGame } from '../index';\r\n\r\nexport const moduleElem = <HTMLElement>document.querySelector('.module');\r\n\r\nexport const renderResultModule = () => {\r\n  const gameResultHtml = `\r\n    <div class=\"info result\">\r\n      <img class=\"info__img\" src=\"./static/${\r\n        game.status === 'win' ? 'celebration' : 'dead'\r\n      }.svg\" alt=\"\" />\r\n      <p class=\"info__title result__title\">${\r\n        game.status === 'win' ? 'Вы выиграли!' : 'Вы проиграли!'\r\n      }</p>\r\n      <p class=\"info__time-title\">Затраченное время:</p>\r\n      <div class=\"timer\">\r\n        <div class=\"timer__count result__count\">${game.gameTime}</div>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" class=\"result__go-button button\" id=\"button-go\">\r\n          Играть снова\r\n        </button>\r\n      </div>\r\n    </div>`;\r\n\r\n  moduleElem.innerHTML = gameResultHtml;\r\n\r\n  const newGameButton = document.querySelector(\r\n    '.result__go-button'\r\n  ) as HTMLElement;\r\n\r\n  newGameButton.addEventListener('click', () => {\r\n    moduleElem.style.display = 'none';\r\n    resetGame();\r\n  });\r\n};\r\n","import {\r\n  game,\r\n  getCardRank,\r\n  getCardSuit,\r\n  getRandomCards,\r\n  resetGame,\r\n} from '../index';\r\nimport { gameContainer } from '../index';\r\nimport { moduleElem, renderResultModule } from './result-component';\r\n\r\nlet matchedCardsCount = 0,\r\n  counter = 0,\r\n  timerId: any;\r\n\r\nexport function resetTimer() {\r\n  clearTimeout(timerId);\r\n}\r\n\r\nexport const renderGame = () => {\r\n  if (game.difficultyLevel === 'easy') {\r\n    getRandomCards(game.fieldSize[0]);\r\n  } else if (game.difficultyLevel === 'medium') {\r\n    getRandomCards(game.fieldSize[1]);\r\n  } else {\r\n    getRandomCards(game.fieldSize[2]);\r\n  }\r\n\r\n  const headerHtml = `\r\n      <header class=\"header\">\r\n        <div class=\"timer\">\r\n          <div class=\"timer__text\">\r\n            <div class=\"timer__min\">min</div>\r\n            <div class=\"timer__sec\">sek</div>\r\n          </div>\r\n          <div class=\"timer__count\">${game.gameTime}</div>\r\n        </div>\r\n        <button class=\"button\" id=\"button-go\">Начать заново</button>\r\n      </header>`;\r\n\r\n  const cardsHtml = game.cardDeck\r\n    .map((card, index) => {\r\n      let suit = '',\r\n        rank = '';\r\n\r\n      return `\r\n          <div class=\"card__back\" data-index=\"${index}\">\r\n            <img src=\"./static/card-back.svg\" alt=\"карта\" />\r\n          </div>\r\n          <div class=\"card\" data-index=\"${index}\">\r\n            <div class=\"card__front\">\r\n              <div class=\"card__top\">\r\n                <div class=\"card__title\">${getCardRank(card, rank)}</div>\r\n                <img class=\"card__suites_small\" src=\"./static/${getCardSuit(\r\n                  card,\r\n                  suit\r\n                )}.svg\" alt=\"\" />\r\n              </div>\r\n              <div class=\"card__suites\">\r\n                <img src=\"./static/${getCardSuit(card, suit)}.svg\" alt=\"\" />\r\n              </div>\r\n              <div class=\"card__top card__top_flipped\">\r\n                <div class=\"card__title\">${getCardRank(card, rank)}</div>\r\n                <img class=\"card__suites_small\" src=\"./static/${getCardSuit(\r\n                  card,\r\n                  suit\r\n                )}.svg\" alt=\"\" />\r\n              </div>\r\n              <div></div>\r\n            </div>\r\n          </div>`;\r\n    })\r\n    .join('');\r\n\r\n  const gameHtml = `\r\n      ${headerHtml}\r\n      <section class=\"game-field\">\r\n      ${cardsHtml}\r\n      </section>`;\r\n\r\n  gameContainer.innerHTML = gameHtml;\r\n\r\n  const cardsFront = document.querySelectorAll('.card');\r\n  const cardsBack = document.querySelectorAll('.card__back');\r\n\r\n  timerId = setTimeout(() => {\r\n    for (const cardFront of cardsFront as any) {\r\n      cardFront.style.display = 'none';\r\n    }\r\n\r\n    for (const cardBack of cardsBack as any) {\r\n      cardBack.style.display = 'flex';\r\n    }\r\n\r\n    game.status = 'start';\r\n    const timer = setInterval(() => {\r\n      if (\r\n        game.status === 'win' ||\r\n        game.status === 'lost' ||\r\n        game.status === 'level'\r\n      ) {\r\n        clearInterval(timer);\r\n        return;\r\n      }\r\n      counter++;\r\n      const minutes = Math.floor(counter / 60)\r\n        .toString()\r\n        .padStart(2, '0');\r\n      const seconds = (counter % 60).toString().padStart(2, '0');\r\n      const timeCount = <HTMLElement>document.querySelector('.timer__count');\r\n\r\n      game.gameTime = `${minutes}.${seconds}`;\r\n      timeCount.textContent = game.gameTime;\r\n    }, 1000);\r\n    counter = 0;\r\n  }, 5000);\r\n\r\n  for (const cardBack of cardsBack as any) {\r\n    cardBack.addEventListener('click', (event: MouseEvent) => {\r\n      event.stopPropagation();\r\n      const backCardIndex = cardBack.dataset.index;\r\n      cardBack.style.display = 'none';\r\n\r\n      for (const cardFront of cardsFront as any) {\r\n        const frontCardIndex = cardFront.dataset.index;\r\n        const card = game.cardDeck[frontCardIndex];\r\n\r\n        if (frontCardIndex === backCardIndex) {\r\n          cardFront.style.display = 'flex';\r\n          cardFront.setAttribute('data-card', card);\r\n          game.selectedCards.push(cardFront);\r\n\r\n          if (game.selectedCards.length === 2) {\r\n            const firstCard = game.selectedCards[0].dataset.card;\r\n            const secondCard = game.selectedCards[1].dataset.card;\r\n\r\n            if (firstCard === secondCard) {\r\n              matchedCardsCount += 2;\r\n\r\n              if (matchedCardsCount === game.cardDeck.length) {\r\n                game.status = 'win';\r\n                moduleElem.style.display = 'flex';\r\n                renderResultModule();\r\n                matchedCardsCount = 0;\r\n              }\r\n\r\n              game.selectedCards = [];\r\n            } else {\r\n              game.status = 'lost';\r\n              moduleElem.style.display = 'flex';\r\n              renderResultModule();\r\n              matchedCardsCount = 0;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  const newGameBtn = <HTMLElement>document.getElementById('button-go');\r\n  newGameBtn.addEventListener('click', () => {\r\n    resetGame();\r\n  });\r\n};\r\n","import { game } from '../index';\r\nimport { renderGame } from './game-component';\r\n\r\nexport const renderStartPage = (appElem: HTMLElement) => {\r\n  game.status = 'level';\r\n  const startPageHtml = `\r\n      <div class=\"info\">\r\n        <p class=\"info__title\">\r\n          Выбери<br />\r\n          сложность\r\n        </p>\r\n        <form class=\"info__form\">\r\n          <div class=\"info__level\">\r\n            <input type=\"radio\" name=\"radio\" value=\"easy\" id=\"dif-easy\" />\r\n            <label for=\"dif-easy\" class=\"info__level-choice\">1</label>\r\n            <input type=\"radio\" name=\"radio\" value=\"medium\" id=\"dif-med\" />\r\n            <label for=\"dif-med\" class=\"info__level-choice\">2</label>\r\n            <input type=\"radio\" name=\"radio\" value=\"hard\" id=\"dif-hard\" />\r\n            <label for=\"dif-hard\" class=\"info__level-choice\">3</label>\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\" class=\"info__go-button button\" id=\"button-go\">Старт</button>\r\n          </div>\r\n        </form>\r\n      </div>`;\r\n\r\n  appElem.innerHTML = startPageHtml;\r\n\r\n  const goButton = document.getElementById('button-go') as HTMLElement,\r\n    difLevelBtnElems = document.querySelectorAll('input');\r\n\r\n  for (const difLevelBtnElem of difLevelBtnElems as any) {\r\n    difLevelBtnElem.addEventListener('click', (event: MouseEvent) => {\r\n      event.stopPropagation();\r\n      game.difficultyLevel = difLevelBtnElem.value;\r\n\r\n      goButton.addEventListener('click', (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        renderGame();\r\n      });\r\n    });\r\n  }\r\n};\r\n","import { renderStartPage } from './components/start-page-component';\r\nimport '../css/style.css';\r\nimport { resetTimer } from './components/game-component';\r\n\r\ntype Game = {\r\n  difficultyLevel: string;\r\n  gameTime: string;\r\n  cardSuits: string[];\r\n  cardRanks: string[];\r\n  fieldSize: number[];\r\n  cardDeck: number[];\r\n  selectedCards: any[];\r\n  status: string;\r\n};\r\n\r\nexport let game: Game = {\r\n  difficultyLevel: '',\r\n  gameTime: '00.00',\r\n  cardSuits: ['diamonds', 'hearts', 'clubs', 'spades'],\r\n  cardRanks: ['6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'],\r\n  fieldSize: [6, 12, 18],\r\n  cardDeck: [],\r\n  selectedCards: [],\r\n  status: '',\r\n};\r\n\r\nexport const gameContainer = document.getElementById('app') as HTMLElement;\r\n\r\nrenderStartPage(gameContainer);\r\n\r\nexport function getRandomCards(fieldSize: number) {\r\n  for (let i = 0; i < fieldSize; i += 2) {\r\n    let n;\r\n\r\n    do {\r\n      n = Math.floor(Math.random() * 37);\r\n    } while (game.cardDeck.includes(n));\r\n\r\n    game.cardDeck[i] = n;\r\n    game.cardDeck[i + 1] = n;\r\n    shuffle(game.cardDeck);\r\n  }\r\n}\r\n\r\nexport function shuffle(array: number[]) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n}\r\n\r\nexport const getCardSuit = (card: number, suit: string) => {\r\n  if (card > 0 && card <= 9) {\r\n    suit = game.cardSuits[3];\r\n  } else if (card > 9 && card <= 18) {\r\n    suit = game.cardSuits[1];\r\n  } else if (card > 18 && card <= 27) {\r\n    suit = game.cardSuits[0];\r\n  } else {\r\n    suit = game.cardSuits[2];\r\n  }\r\n\r\n  return suit;\r\n};\r\n\r\nexport const getCardRank = (card: number, rank: string) => {\r\n  if (card === 1 || card === 10 || card === 19 || card === 28) {\r\n    rank = game.cardRanks[8];\r\n  } else if (card === 2 || card === 11 || card === 20 || card === 29) {\r\n    rank = game.cardRanks[7];\r\n  } else if (card === 3 || card === 12 || card === 21 || card === 30) {\r\n    rank = game.cardRanks[6];\r\n  } else if (card === 4 || card === 13 || card === 22 || card === 31) {\r\n    rank = game.cardRanks[5];\r\n  } else if (card === 5 || card === 14 || card === 23 || card === 32) {\r\n    rank = game.cardRanks[4];\r\n  } else if (card === 6 || card === 15 || card === 24 || card === 33) {\r\n    rank = game.cardRanks[3];\r\n  } else if (card === 7 || card === 16 || card === 25 || card === 34) {\r\n    rank = game.cardRanks[2];\r\n  } else if (card === 8 || card === 17 || card === 26 || card === 35) {\r\n    rank = game.cardRanks[1];\r\n  } else {\r\n    rank = game.cardRanks[0];\r\n  }\r\n\r\n  return rank;\r\n};\r\n\r\nexport function resetGame() {\r\n  game.cardDeck = [];\r\n  game.selectedCards = [];\r\n  game.difficultyLevel = '';\r\n  game.gameTime = '00.00';\r\n  game.status = 'level';\r\n\r\n  resetTimer();\r\n  renderStartPage(gameContainer);\r\n}\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","timerId","moduleElem","document","querySelector","renderResultModule","gameResultHtml","game","status","gameTime","innerHTML","addEventListener","style","display","resetGame","matchedCardsCount","counter","renderStartPage","appElem","goButton","getElementById","difLevelBtnElem","event","stopPropagation","difficultyLevel","value","preventDefault","getRandomCards","fieldSize","headerHtml","cardsHtml","cardDeck","map","card","index","getCardRank","getCardSuit","join","gameHtml","gameContainer","cardsFront","querySelectorAll","cardsBack","setTimeout","timer","setInterval","minutes","Math","floor","toString","padStart","seconds","timeCount","textContent","clearInterval","cardBack","backCardIndex","dataset","cardFront","frontCardIndex","setAttribute","selectedCards","push","length","renderGame","cardSuits","cardRanks","i","n","random","includes","shuffle","array","j","suit","rank","clearTimeout"],"sourceRoot":""}