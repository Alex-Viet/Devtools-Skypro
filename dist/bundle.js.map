{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://devtools-skypro/webpack/bootstrap","webpack://devtools-skypro/webpack/runtime/define property getters","webpack://devtools-skypro/webpack/runtime/hasOwnProperty shorthand","webpack://devtools-skypro/./js/components/game-component.js","webpack://devtools-skypro/./js/components/start-page-component.js","webpack://devtools-skypro/./js/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import {\r\n  game,\r\n  getCardRank,\r\n  getCardSuit,\r\n  getRandomCards,\r\n  resetGame,\r\n} from '../index.js';\r\nimport { gameContainer } from '../index.js';\r\nimport { renderStartPage } from './start-page-component.js';\r\n\r\nexport const renderGame = () => {\r\n  if (game.difficultyLevel === 'easy') {\r\n    getRandomCards(game.fieldSize[0]);\r\n  } else if (game.difficultyLevel === 'medium') {\r\n    getRandomCards(game.fieldSize[1]);\r\n  } else {\r\n    getRandomCards(game.fieldSize[2]);\r\n  }\r\n\r\n  const headerHtml = `\r\n      <header class=\"header\">\r\n        <div class=\"timer\">\r\n          <div class=\"timer__text\">\r\n            <div class=\"timer__min\">min</div>\r\n            <div class=\"timer__sec\">sek</div>\r\n          </div>\r\n          <div class=\"timer__count\">00.00</div>\r\n        </div>\r\n        <button class=\"header__button button\">Начать заново</button>\r\n      </header>`;\r\n\r\n  const cardsHtml = game.cardDeck\r\n    .map((card, index) => {\r\n      let suit = '',\r\n        rank = '';\r\n\r\n      return `\r\n          <div class=\"card__back\" data-index=\"${index}\">\r\n            <img src=\"./static/card-back.svg\" alt=\"карта\" />\r\n          </div>\r\n          <div class=\"card\" data-index=\"${index}\">\r\n            <div class=\"card__front\">\r\n              <div class=\"card__top\">\r\n                <div class=\"card__title\">${getCardRank(card, rank)}</div>\r\n                <img class=\"card__suites_small\" src=\"./static/${getCardSuit(\r\n                  card,\r\n                  suit\r\n                )}.svg\" alt=\"\" />\r\n              </div>\r\n              <div class=\"card__suites\">\r\n                <img src=\"./static/${getCardSuit(card, suit)}.svg\" alt=\"\" />\r\n              </div>\r\n              <div class=\"card__top card__top_flipped\">\r\n                <div class=\"card__title\">${getCardRank(card, rank)}</div>\r\n                <img class=\"card__suites_small\" src=\"./static/${getCardSuit(\r\n                  card,\r\n                  suit\r\n                )}.svg\" alt=\"\" />\r\n              </div>\r\n              <div></div>\r\n            </div>\r\n          </div>`;\r\n    })\r\n    .join('');\r\n\r\n  const gameHtml = `\r\n      ${headerHtml}\r\n      <section class=\"game-field\">\r\n      ${cardsHtml}\r\n      </section>`;\r\n\r\n  gameContainer.innerHTML = gameHtml;\r\n\r\n  const cardsFront = document.querySelectorAll('.card');\r\n  const cardsBack = document.querySelectorAll('.card__back');\r\n\r\n  setTimeout(() => {\r\n    for (const cardFront of cardsFront) {\r\n      cardFront.style.display = 'none';\r\n    }\r\n\r\n    for (const cardBack of cardsBack) {\r\n      cardBack.style.display = 'flex';\r\n    }\r\n  }, 5000);\r\n\r\n  for (const cardBack of cardsBack) {\r\n    cardBack.addEventListener('click', (event) => {\r\n      event.stopPropagation();\r\n      const backCardIndex = cardBack.dataset.index;\r\n      cardBack.style.display = 'none';\r\n\r\n      for (const cardFront of cardsFront) {\r\n        const frontCardIndex = cardFront.dataset.index;\r\n        const card = game.cardDeck[frontCardIndex];\r\n        if (frontCardIndex === backCardIndex) {\r\n          cardFront.style.display = 'flex';\r\n          cardFront.setAttribute('data-card', card);\r\n          game.selectedCards.push(cardFront);\r\n\r\n          if (game.selectedCards.length === 2) {\r\n            const firstCard = game.selectedCards[0].dataset.card;\r\n            const secondCard = game.selectedCards[1].dataset.card;\r\n\r\n            if (firstCard === secondCard) {\r\n              alert('Вы победили!');\r\n              game.selectedCards = [];\r\n            } else {\r\n              alert('Вы проиграли!');\r\n              renderStartPage(gameContainer);\r\n              resetGame();\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  const newGameButton = document.querySelector('.button');\r\n\r\n  newGameButton.addEventListener('click', resetGame);\r\n};\r\n","import { game } from '../index.js';\r\nimport { renderGame } from './game-component.js';\r\n\r\nexport const renderStartPage = (appElem) => {\r\n  const startPageHtml = `\r\n      <div class=\"info\">\r\n        <p class=\"info__title\">\r\n          Выбери<br />\r\n          сложность\r\n        </p>\r\n        <form class=\"info__form\">\r\n          <div class=\"info__level\">\r\n            <input type=\"radio\" name=\"radio\" value=\"easy\" id=\"dif-easy\" />\r\n            <label for=\"dif-easy\" class=\"info__level-choice\">1</label>\r\n            <input type=\"radio\" name=\"radio\" value=\"medium\" id=\"dif-med\" />\r\n            <label for=\"dif-med\" class=\"info__level-choice\">2</label>\r\n            <input type=\"radio\" name=\"radio\" value=\"hard\" id=\"dif-hard\" />\r\n            <label for=\"dif-hard\" class=\"info__level-choice\">3</label>\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\" class=\"info__go-button button\" id=\"button-go\">Старт</button>\r\n          </div>\r\n        </form>\r\n      </div>`;\r\n\r\n  appElem.innerHTML = startPageHtml;\r\n\r\n  const goButton = document.getElementById('button-go'),\r\n    difLevelBtnElems = document.querySelectorAll('input');\r\n\r\n  for (const difLevelBtnElem of difLevelBtnElems) {\r\n    difLevelBtnElem.addEventListener('click', (event) => {\r\n      event.stopPropagation();\r\n      game.difficultyLevel = difLevelBtnElem.value;\r\n\r\n      goButton.addEventListener('click', (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        renderGame();\r\n      });\r\n    });\r\n  }\r\n};\r\n","import { renderStartPage } from './components/start-page-component.js';\r\nimport '../css/style.css';\r\n\r\nexport let game = {\r\n  difficultyLevel: '',\r\n  gameTime: 0,\r\n  cardSuits: ['diamonds', 'hearts', 'clubs', 'spades'],\r\n  cardRanks: ['6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'],\r\n  fieldSize: [6, 12, 18],\r\n  cardDeck: [],\r\n  selectedCards: [],\r\n};\r\n\r\nexport const gameContainer = document.getElementById('app');\r\n\r\nrenderStartPage(gameContainer);\r\n\r\nexport function getRandomCards(fieldSize) {\r\n  for (let i = 0; i < fieldSize; i += 2) {\r\n    let n;\r\n\r\n    do {\r\n      n = Math.floor(Math.random() * 37);\r\n    } while (game.cardDeck.includes(n));\r\n\r\n    game.cardDeck[i] = n;\r\n    game.cardDeck[i + 1] = n;\r\n    shuffle(game.cardDeck);\r\n  }\r\n}\r\n\r\nfunction shuffle(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n}\r\n\r\nexport const getCardSuit = (card, suit) => {\r\n  if (card > 0 && card <= 9) {\r\n    suit = game.cardSuits[3];\r\n  } else if (card > 9 && card <= 18) {\r\n    suit = game.cardSuits[1];\r\n  } else if (card > 18 && card <= 27) {\r\n    suit = game.cardSuits[0];\r\n  } else {\r\n    suit = game.cardSuits[2];\r\n  }\r\n\r\n  return suit;\r\n};\r\n\r\nexport const getCardRank = (card, rank) => {\r\n  if (card === 1 || card === 10 || card === 19 || card === 28) {\r\n    rank = game.cardRanks[8];\r\n  } else if (card === 2 || card === 11 || card === 20 || card === 29) {\r\n    rank = game.cardRanks[7];\r\n  } else if (card === 3 || card === 12 || card === 21 || card === 30) {\r\n    rank = game.cardRanks[6];\r\n  } else if (card === 4 || card === 13 || card === 22 || card === 31) {\r\n    rank = game.cardRanks[5];\r\n  } else if (card === 5 || card === 14 || card === 23 || card === 32) {\r\n    rank = game.cardRanks[4];\r\n  } else if (card === 6 || card === 15 || card === 24 || card === 33) {\r\n    rank = game.cardRanks[3];\r\n  } else if (card === 7 || card === 16 || card === 25 || card === 34) {\r\n    rank = game.cardRanks[2];\r\n  } else if (card === 8 || card === 17 || card === 26 || card === 35) {\r\n    rank = game.cardRanks[1];\r\n  } else {\r\n    rank = game.cardRanks[0];\r\n  }\r\n\r\n  return rank;\r\n};\r\n\r\nexport function resetGame() {\r\n  game.cardDeck = [];\r\n  game.selectedCards = [];\r\n  game.difficultyLevel = '';\r\n  game.gameTime = 0;\r\n\r\n  renderStartPage(gameContainer);\r\n}\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","renderGame","game","difficultyLevel","getRandomCards","fieldSize","gameHtml","cardDeck","map","card","index","getCardRank","getCardSuit","join","gameContainer","innerHTML","cardsFront","document","querySelectorAll","cardsBack","setTimeout","cardFront","style","display","cardBack","addEventListener","event","stopPropagation","backCardIndex","dataset","frontCardIndex","setAttribute","selectedCards","push","length","alert","renderStartPage","resetGame","querySelector","appElem","goButton","getElementById","difLevelBtnElems","difLevelBtnElem","value","preventDefault","gameTime","cardSuits","cardRanks","i","n","Math","floor","random","includes","shuffle","array","j","suit","rank"],"sourceRoot":""}